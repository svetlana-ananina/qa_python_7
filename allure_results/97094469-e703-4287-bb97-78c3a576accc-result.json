{"name": "Проверяем, что если не передано поле логина или пароля, запрос возвращает ошибку 400", "status": "failed", "statusDetails": {"message": "AssertionError: Неверный код в ответе: ожидался 400, получен \"504\", ответ: \"Service unavailable\"", "trace": "self = <test_login_courier.TestLoginCourier object at 0x000001B7F6D7AB90>, create_new_courier = (<Response [201]>, {'firstName': 'frvbmcrkod', 'login': 'tmlmfxrzpj', 'password': 'sfzcijvacw'}), key = 'password'\n\n    @pytest.mark.parametrize('key', [KEYS.LOGIN, KEYS.PASSWORD])\n    @allure.title('Проверяем, что если не передано поле логина или пароля, запрос возвращает ошибку 400')\n    def test_login_courier_missing_field_error(self, create_new_courier, key):\n        if _debug:\n            print(f'\\n============================= Проверяем, что если не передано поле \"{key}\", запрос возвращает ошибку 400 =============================')\n        # создаем нового курьера и получаем его данные\n        response, user_data = create_new_courier\n        # проверяем что курьер создан: код ответа 201, тело ответа {'ok' = True}\n        check_status_code(response, code.CREATED)\n        check_key_and_value_in_body(response, KEYS.OK_KEY, True)\n    \n        # формируем данные для запроса без поля key\n        payload = user_data.copy()\n        payload.pop(key)\n        # отправляем запрос на регистрацию курьера и сохраняем ответ в переменную response\n        response = register_courier(payload)\n        # проверяем что получен код ответа 400\n>       check_status_code(response, code.BAD_REQUEST)\n\ntests\\test_login_courier.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [504]>, expected_code = 400\n\n    @allure.step('Проверяем код ответа')\n    def check_status_code(response, expected_code):\n        # проверяем что получен код ответа expected_code\n        received_code = response.status_code\n>       assert received_code == expected_code, f'Неверный код в ответе: ожидался {expected_code}, получен \"{received_code}\", ответ: \"{response.text}\"'\nE       AssertionError: Неверный код в ответе: ожидался 400, получен \"504\", ответ: \"Service unavailable\"\n\nhelpers\\helpers_on_check_response.py:17: AssertionError"}, "steps": [{"name": "Проверяем код ответа", "status": "passed", "parameters": [{"name": "response", "value": "<Response [201]>"}, {"name": "expected_code", "value": "201"}], "start": 1701540641252, "stop": 1701540641252}, {"name": "Проверяем значение ключа в ответе", "status": "passed", "parameters": [{"name": "response", "value": "<Response [201]>"}, {"name": "key", "value": "'ok'"}, {"name": "value", "value": "True"}], "start": 1701540641252, "stop": 1701540641252}, {"name": "Отправляем API-запрос на регистрацию нового курьера/получение id курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'tmlmfxrzpj', 'firstName': 'frvbmcrkod'}"}], "start": 1701540641252, "stop": 1701540702371}, {"name": "Проверяем код ответа", "status": "failed", "statusDetails": {"message": "AssertionError: Неверный код в ответе: ожидался 400, получен \"504\", ответ: \"Service unavailable\"\n", "trace": "  File \"C:\\Python_projects\\Python_QA\\qa_python_1\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Python_projects\\Python_QA\\qa_python_7\\helpers\\helpers_on_check_response.py\", line 17, in check_status_code\n    assert received_code == expected_code, f'Неверный код в ответе: ожидался {expected_code}, получен \"{received_code}\", ответ: \"{response.text}\"'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "response", "value": "<Response [504]>"}, {"name": "expected_code", "value": "400"}], "start": 1701540702372, "stop": 1701540702372}], "attachments": [{"name": "stdout", "source": "30c15125-30c9-4265-a7bb-0a0af00269e6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "key", "value": "'password'"}], "start": 1701540641251, "stop": 1701540702373, "uuid": "1a54e1ef-f42f-40c4-9940-afb6ff81a76d", "historyId": "127c61d8a174f7d1b3d13f4126215f84", "testCaseId": "3ede36b7589fd4aecb657c5bdf84cfe1", "fullName": "tests.test_login_courier.TestLoginCourier#test_login_courier_missing_field_error", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('create_new_courier')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "DESKTOP-O6MNHQN"}, {"name": "thread", "value": "3976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_courier"}]}